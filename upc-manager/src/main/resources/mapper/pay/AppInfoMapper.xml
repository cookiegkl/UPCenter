<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.hanzhdy.manager.pay.mapper.AppInfoMapperExt" >
  <resultMap id="BaseResultMap" type="org.hanzhdy.manager.pay.model.AppInfo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="APP_ID" property="appId" jdbcType="VARCHAR" />
    <result column="APIKEY" property="apikey" jdbcType="VARCHAR" />
    <result column="APP_NAME" property="appName" jdbcType="VARCHAR" />
    <result column="WHITE_LIST" property="whiteList" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    APP_ID as appId, APIKEY as apikey, APP_NAME as appName, WHITE_LIST as whiteList, 
    STATUS as status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.hanzhdy.manager.pay.model.AppInfoExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <include refid="Pageable_Prefix" />
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from app_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="Pageable_Suffix" />
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from app_info
    where APP_ID = #{appId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from app_info
    where APP_ID = #{appId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="org.hanzhdy.manager.pay.model.AppInfoExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from app_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.hanzhdy.manager.pay.model.AppInfo" useGeneratedKeys="true" keyProperty="appId" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into app_info (APIKEY, APP_NAME, WHITE_LIST, 
      STATUS)
    values (#{apikey,jdbcType=VARCHAR}, #{appName,jdbcType=VARCHAR}, #{whiteList,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.hanzhdy.manager.pay.model.AppInfo" useGeneratedKeys="true" keyProperty="appId" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into app_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="apikey != null" >
        APIKEY,
      </if>
      <if test="appName != null" >
        APP_NAME,
      </if>
      <if test="whiteList != null" >
        WHITE_LIST,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="apikey != null" >
        #{apikey,jdbcType=VARCHAR},
      </if>
      <if test="appName != null" >
        #{appName,jdbcType=VARCHAR},
      </if>
      <if test="whiteList != null" >
        #{whiteList,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.hanzhdy.manager.pay.model.AppInfoExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from app_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update app_info
    <set >
      <if test="record.appId != null" >
        APP_ID = #{record.appId,jdbcType=VARCHAR},
      </if>
      <if test="record.apikey != null" >
        APIKEY = #{record.apikey,jdbcType=VARCHAR},
      </if>
      <if test="record.appName != null" >
        APP_NAME = #{record.appName,jdbcType=VARCHAR},
      </if>
      <if test="record.whiteList != null" >
        WHITE_LIST = #{record.whiteList,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        STATUS = #{record.status,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update app_info
    set APP_ID = #{record.appId,jdbcType=VARCHAR},
      APIKEY = #{record.apikey,jdbcType=VARCHAR},
      APP_NAME = #{record.appName,jdbcType=VARCHAR},
      WHITE_LIST = #{record.whiteList,jdbcType=VARCHAR},
      STATUS = #{record.status,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.hanzhdy.manager.pay.model.AppInfo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update app_info
    <set >
      <if test="apikey != null" >
        APIKEY = #{apikey,jdbcType=VARCHAR},
      </if>
      <if test="appName != null" >
        APP_NAME = #{appName,jdbcType=VARCHAR},
      </if>
      <if test="whiteList != null" >
        WHITE_LIST = #{whiteList,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where APP_ID = #{appId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.hanzhdy.manager.pay.model.AppInfo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update app_info
    set APIKEY = #{apikey,jdbcType=VARCHAR},
      APP_NAME = #{appName,jdbcType=VARCHAR},
      WHITE_LIST = #{whiteList,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=VARCHAR}
    where APP_ID = #{appId,jdbcType=VARCHAR}
  </update>
  <sql id="Pageable_Prefix" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <if test="page != null" >
      select * from (
    </if>
  </sql>
  <sql id="Pageable_Suffix" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <if test="page != null" >
      ) pageable_limited limit #{page.begin} , #{page.size}
    </if>
  </sql>
</mapper>